# 繰り返し処理

# 1. 挨拶
# 問題: 100回 "こんにちは！" と出力する関数 hello を定義してください。

# 100回数えるのも大変なのでeach文の引数にindex番号入れました。
def hello
  (1..100).each do |index|
    puts "#{index}: こんにちは"
  end
end
# hello

# 2.羊の問題
# あなたは眠れなくなったので羊の数を数えることにしました。羊の数 n が与えられ
# 羊が1匹 羊が2匹 羊が3匹 ...
# と、n 回羊の数えを出力する関数 sheep を定義してください。

def sheep(n)
  for n in 1..(n) do
    puts "羊が#{n}匹"
  end
end
# sheep(5)

puts '--------------------'
# 色々と調べた結果timesメソッドが一番シンプル！ && 初めてみたメソッドなので書いてみました。
def sheep2(n)
  n.times do |sheep|
    puts "羊が#{sheep + 1}匹"
  end
end
# sheep2(3)

# 3.総和
# 問題:1から100 までの足し算の結果を出力する関数 sum_1_100 を定義してください。

def sum_1_100
  # 初期値0
  sum = 0
  # 今回は1から100までなのでこのように範囲を決めて繰り返し処理を行う。
  (1..100).each do |num|
    # 最初にsum = 0 + 1→sumは1になる、次の繰り返しでsum = 1 + 2でsumは3になる、因みにnumは１ずつ増えるので2になる
    # ３回目の繰り返しで、sum = 3 + 3→sum = 6 + 4でsumは10になる、このような繰り返しで最終的にsumは5050になる
    sum += num
  end
  # 足し算の結果を返す
  sum
end
puts sum_1_100
